#!/bin/bash

# –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
VERSION="2.0.21"
SCRIPT_START_TIME="2025-02-16 07:39:59"
CURRENT_USER="gopnikgame"

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
DNSCRYPT_USER="dnscrypt"
DNSCRYPT_GROUP="dnscrypt"
DNSCRYPT_BIN_PATH="/usr/local/bin/dnscrypt-proxy"
DNSCRYPT_CONFIG="/etc/dnscrypt-proxy/dnscrypt-proxy.toml"
DNSCRYPT_CACHE_DIR="/var/cache/dnscrypt-proxy"
BACKUP_DIR="/var/backup/dns_$(date +%Y%m%d_%H%M%S)"
DEBUG_DIR="/var/log/dnscrypt"
LOG_FILE="${DEBUG_DIR}/install_$(date +%Y%m%d_%H%M%S).log"
STATE_FILE="/tmp/dnscrypt_install_state"

# –°–æ–∑–¥–∞—ë–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
mkdir -p "$DEBUG_DIR"
touch "$LOG_FILE"
chmod 644 "$LOG_FILE"

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ DNS —Å–µ—Ä–≤–µ—Ä–æ–≤
declare -A DNS_SERVERS=(
    ["Cloudflare"]="cloudflare"
    ["Quad9"]="quad9"
    ["OpenDNS"]="opendns"
    ["AdGuard"]="adguard-dns"
    ["Anonymous Montreal"]="anon-cs-montreal"
)

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    local level="$1"
    shift
    local message="$*"
    local timestamp=$(date '+%Y-%m-%d %H:%M:%S')
    local caller_info=""
    
    if [ "$level" = "DEBUG" ] || [ "$level" = "ERROR" ]; then
        local caller_function="${FUNCNAME[1]}"
        local caller_line="${BASH_LINENO[0]}"
        caller_info="($caller_function:$caller_line)"
    fi
    
    local log_message="$timestamp [$level] $caller_info $message"
    echo "$log_message" >> "$LOG_FILE"
    
    case "$level" in
        "ERROR")
            echo -e "\e[31m$log_message\e[0m" >&2
            ;;
        "WARN")
            echo -e "\e[33m$log_message\e[0m"
            ;;
        "SUCCESS")
            echo -e "\e[32m$log_message\e[0m"
            ;;
        "INFO")
            echo "$log_message"
            ;;
        "DEBUG")
            if [ "${DEBUG:-false}" = "true" ]; then
                echo -e "\e[34m$log_message\e[0m"
            fi
            ;;
    esac
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
set -o errexit
set -o pipefail
set -o nounset

# –ü—Ä–æ–≤–µ—Ä–∫–∞ root –ø—Ä–∞–≤
check_root() {
    if [[ $EUID -ne 0 ]]; then
        log "ERROR" "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω —Å –ø—Ä–∞–≤–∞–º–∏ root"
        exit 1
    fi
    log "INFO" "Root –ø—Ä–∞–≤–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω—ã"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä—É—Å—Å–∫–æ–π –ª–æ–∫–∞–ª–∏
setup_russian_locale() {
    log "INFO" "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞..."
    
    if ! locale -a | grep -q "ru_RU.utf8"; then
        log "INFO" "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä—É—Å—Å–∫–æ–π –ª–æ–∫–∞–ª–∏..."
        
        if [ -f /etc/debian_version ]; then
            apt-get update
            apt-get install -y locales
            sed -i 's/# ru_RU.UTF-8 UTF-8/ru_RU.UTF-8 UTF-8/' /etc/locale.gen
            locale-gen ru_RU.UTF-8
        elif [ -f /etc/fedora-release ]; then
            dnf install -y glibc-langpack-ru
        elif [ -f /etc/centos-release ]; then
            yum install -y glibc-langpack-ru
        else
            log "WARN" "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞, —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–æ–∫–∞–ª–∏ –º–æ–∂–µ—Ç –Ω–µ —É–¥–∞—Ç—å—Å—è"
            return 1
        fi
    fi
    
    export LANG=ru_RU.UTF-8
    export LC_ALL=ru_RU.UTF-8
    
    if locale | grep -q "ru_RU.UTF-8"; then
        log "SUCCESS" "–†—É—Å—Å–∫–∞—è –ª–æ–∫–∞–ª—å —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
        return 0
    else
        log "ERROR" "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä—É—Å—Å–∫—É—é –ª–æ–∫–∞–ª—å"
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ DNSCrypt
check_dnscrypt_installed() {
    log "INFO" "–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ DNSCrypt..."
    if [ -f "$DNSCRYPT_BIN_PATH" ] && systemctl is-active --quiet dnscrypt-proxy; then
        log "INFO" "DNSCrypt —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        return 0
    else
        log "INFO" "DNSCrypt –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ 3x-ui
check_3xui_installed() {
    log "INFO" "–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ 3x-ui..."
    if [ -f "/usr/local/x-ui/x-ui" ] && systemctl is-active --quiet x-ui; then
        log "INFO" "3x-ui —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        return 0
    else
        log "INFO" "3x-ui –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        return 1
    fi
}

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
save_state() {
    echo "$1" > "$STATE_FILE"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
check_prerequisites() {
    log "INFO" "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤..."
    
    local required_commands=("curl" "wget" "tar" "systemctl" "dig" "ss")
    local missing_commands=()
    
    for cmd in "${required_commands[@]}"; do
        if ! command -v "$cmd" >/dev/null 2>&1; then
            missing_commands+=("$cmd")
        fi
    done
    
    if [ ${#missing_commands[@]} -ne 0 ]; then
        log "ERROR" "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–º–∞–Ω–¥—ã: ${missing_commands[*]}"
        log "INFO" "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: ${missing_commands[*]}"
        return 1
    fi
    
    log "INFO" "–í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç"
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ DNSCrypt
diagnose_dnscrypt() {
    log "INFO" "=== –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ DNSCrypt ==="
    local issues=0

    echo
    echo "üîç –ù–∞—á–∏–Ω–∞—é –∫–æ–º–ø–ª–µ–∫—Å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É DNSCrypt..."
    echo

    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ª—É–∂–±—ã DNSCrypt
    echo "1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–ª—É–∂–±—ã DNSCrypt:"
    if systemctl is-active --quiet dnscrypt-proxy; then
        echo "‚úÖ –°–ª—É–∂–±–∞ DNSCrypt –∞–∫—Ç–∏–≤–Ω–∞ –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ —Ä–∞–±–æ—Ç—ã —Å–ª—É–∂–±—ã
        local uptime=$(systemctl show dnscrypt-proxy --property=ActiveEnterTimestamp | cut -d'=' -f2)
        echo "‚ÑπÔ∏è –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã —Å: $uptime"
    else
        echo "‚ùå –°–ª—É–∂–±–∞ DNSCrypt –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞!"
        systemctl status dnscrypt-proxy
        issues=$((issues + 1))
    fi
    echo

    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ DNS —Å–µ—Ä–≤–µ—Ä–∞
    echo "2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ DNS —Å–µ—Ä–≤–µ—Ä–∞:"
    if [ -f "$DNSCRYPT_CONFIG" ]; then
        local current_server=$(grep "server_names" "$DNSCRYPT_CONFIG" | cut -d"'" -f2)
        echo "‚ÑπÔ∏è –¢–µ–∫—É—â–∏–π DNS —Å–µ—Ä–≤–µ—Ä: $current_server"
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        if [ -f "/var/log/dnscrypt-proxy/dnscrypt-proxy.log" ]; then
            echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤:"
            tail -n 50 /var/log/dnscrypt-proxy/dnscrypt-proxy.log | grep -i "server" | tail -n 5
        fi
    else
        echo "‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª DNSCrypt –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        issues=$((issues + 1))
    fi
    echo

    # 3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∏–º—ë–Ω
    echo "3Ô∏è‚É£ –¢–µ—Å—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –¥–æ–º–µ–Ω–Ω—ã—Ö –∏–º—ë–Ω:"
    local test_domains=("google.com" "cloudflare.com" "github.com")
    
    for domain in "${test_domains[@]}"; do
        echo -n "üåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ $domain: "
        if dig @127.0.0.1 "$domain" +short +timeout=5 > /dev/null 2>&1; then
            local resolve_time=$(dig @127.0.0.1 "$domain" +noall +stats | grep "Query time" | cut -d':' -f2-)
            echo "‚úÖ OK $resolve_time"
        else
            echo "‚ùå –û—à–∏–±–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è"
            issues=$((issues + 1))
        fi
    done
    echo

    # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É
    echo "4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç:"
    if ping -c 1 8.8.8.8 >/dev/null 2>&1; then
        echo "‚úÖ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        echo "‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º"
        issues=$((issues + 1))
    fi
    echo

    # 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫
    echo "5Ô∏è‚É£ –ê–Ω–∞–ª–∏–∑ –ª–æ–≥–æ–≤ DNSCrypt:"
    if [ -f "/var/log/dnscrypt-proxy/dnscrypt-proxy.log" ]; then
        local errors=$(grep -i "error\|failed\|warning" /var/log/dnscrypt-proxy/dnscrypt-proxy.log | tail -n 5)
        if [ -n "$errors" ]; then
            echo "‚ö†Ô∏è –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö:"
            echo "$errors"
            issues=$((issues + 1))
        else
            echo "‚úÖ –û—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ"
        fi
    else
        echo "‚ùå –õ–æ–≥-—Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
        issues=$((issues + 1))
    fi
    echo

    # 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    echo "6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ DNSCrypt:"
    if [ -f "$DNSCRYPT_CONFIG" ]; then
        echo "üìÑ –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:"
        grep -E "server_names|listen_addresses|require_dnssec|require_nolog|cache" "$DNSCRYPT_CONFIG" | while read -r line; do
            echo "   $line"
        done
    else
        echo "‚ùå –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω"
        issues=$((issues + 1))
    fi
    echo

    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á—ë—Ç
    echo "=== –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ ==="
    if [ $issues -eq 0 ]; then
        echo "‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
    else
        echo "‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –ø—Ä–æ–±–ª–µ–º: $issues"
        echo "üìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:"
        echo "   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: /var/log/dnscrypt-proxy/dnscrypt-proxy.log"
        echo "   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é: $DNSCRYPT_CONFIG"
        echo "   3. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–ª—É–∂–±—É: systemctl restart dnscrypt-proxy"
    fi
}

# –ò–∑–º–µ–Ω–µ–Ω–∏–µ DNS —Å–µ—Ä–≤–µ—Ä–∞
change_dns_server() {
    log "INFO" "=== –ò–∑–º–µ–Ω–µ–Ω–∏–µ DNS —Å–µ—Ä–≤–µ—Ä–∞ ==="
    
    echo
    echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ DNS —Å–µ—Ä–≤–µ—Ä—ã:"
    echo "1) Cloudflare DNS (–ë—ã—Å—Ç—Ä—ã–π, –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω –Ω–∞ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å)"
    echo "2) Quad9 (–ü–æ–≤—ã—à–µ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å, –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –≤—Ä–µ–¥–æ–Ω–æ—Å–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤)"
    echo "3) OpenDNS (–°–µ–º–µ–π–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä, –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞)"
    echo "4) AdGuard DNS (–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ä–µ–∫–ª–∞–º—ã –∏ —Ç—Ä–µ–∫–µ—Ä–æ–≤)"
    echo "5) Anonymous Montreal (–ê–Ω–æ–Ω–∏–º–Ω—ã–π —Ä–µ–ª–µ–π —á–µ—Ä–µ–∑ –ö–∞–Ω–∞–¥—É)"
    echo
    
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ DNS —Å–µ—Ä–≤–µ—Ä (1-5): " dns_choice
    echo
    
    case $dns_choice in
        1) selected_server="cloudflare"
           server_name="Cloudflare DNS";;
        2) selected_server="quad9"
           server_name="Quad9";;
        3) selected_server="opendns"
           server_name="OpenDNS";;
        4) selected_server="adguard-dns"
           server_name="AdGuard DNS";;
        5) selected_server="anon-cs-montreal"
           server_name="Anonymous Montreal";;
        *) log "ERROR" "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
           return 1;;
    esac
    
    cp "$DNSCRYPT_CONFIG" "${DNSCRYPT_CONFIG}.backup"
    
    log "INFO" "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ DNSCrypt –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è $server_name..."
    
    cat > "$DNSCRYPT_CONFIG" << EOL
server_names = ['${selected_server}']
listen_addresses = ['127.0.0.1:53']
max_clients = 250
ipv4_servers = true
ipv6_servers = false
dnscrypt_servers = true
doh_servers = true
require_dnssec = true
require_nolog = true
require_nofilter = true
force_tcp = false
timeout = 5000
keepalive = 30
log_level = 2
use_syslog = true
cache = true
cache_size = 4096
cache_min_ttl = 2400
cache_max_ttl = 86400
cache_neg_min_ttl = 60
cache_neg_max_ttl = 600
[sources]
  [sources.'public-resolvers']
  urls = ['https://raw.githubusercontent.com/DNSCrypt/dnscrypt-resolvers/master/v3/public-resolvers.md']
  cache_file = 'public-resolvers.md'
  minisign_key = 'RWQf6LRCGA9i53mlYecO4IzT51TGPpvWucNSCh1CBM0QTaLn73Y7GFO3'
  refresh_delay = 72
  prefix = ''
EOL

    systemctl restart dnscrypt-proxy
    
    if systemctl is-active --quiet dnscrypt-proxy; then
        if dig @127.0.0.1 google.com +short +timeout=5 > /dev/null 2>&1; then
            log "SUCCESS" "DNS —Å–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ $server_name"
            return 0
        else
            log "ERROR" "–¢–µ—Å—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è DNS –Ω–µ –ø—Ä–æ–π–¥–µ–Ω"
            mv "${DNSCRYPT_CONFIG}.backup" "$DNSCRYPT_CONFIG"
            systemctl restart dnscrypt-proxy
            return 1
        fi
    else
        log "ERROR" "–°–ª—É–∂–±–∞ DNSCrypt –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª–∞—Å—å"
        mv "${DNSCRYPT_CONFIG}.backup" "$DNSCRYPT_CONFIG"
        systemctl restart dnscrypt-proxy
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ DNS –¥–ª—è 3x-ui
configure_3xui_dns() {
    log "INFO" "=== –ù–∞—Å—Ç—Ä–æ–π–∫–∞ DNS –¥–ª—è 3x-ui ==="
    
    local xui_config="/usr/local/x-ui/config.json"
    
    if [ ! -f "$xui_config" ]; then
        log "ERROR" "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª 3x-ui –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi
    
    cp "$xui_config" "${xui_config}.backup"
    
    local current_dns=$(grep -o '"dns_server":"[^"]*"' "$xui_config" | cut -d'"' -f4)
    log "INFO" "–¢–µ–∫—É—â–∏–π DNS —Å–µ—Ä–≤–µ—Ä –≤ 3x-ui: $current_dns"
    
    sed -i 's/"dns_server":"[^"]*"/"dns_server":"127.0.0.1"/' "$xui_config"
    
    systemctl restart x-ui
    
    if systemctl is-active --quiet x-ui; then
        log "SUCCESS" "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ DNS –¥–ª—è 3x-ui –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
        return 0
    else
        log "ERROR" "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å 3x-ui"
        mv "${xui_config}.backup" "$xui_config"
        systemctl restart x-ui
        return 1
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log "INFO" "–ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ (–í–µ—Ä—Å–∏—è: $VERSION)"
    log "INFO" "–í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: $SCRIPT_START_TIME"
    log "INFO" "–¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $CURRENT_USER"
    
    check_root || exit 1
    setup_russian_locale || log "WARN" "–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É –±–µ–∑ —Ä—É—Å—Å–∫–æ–π –ª–æ–∫–∞–ª–∏"
    
    if ! check_dnscrypt_installed; then
        log "INFO" "DNSCrypt –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–∞—á–∏–Ω–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É..."
        check_prerequisites || exit 1
        check_system_state || exit 1
        check_port_53 || exit 1
        create_backup || exit 1
        
        if ! install_dnscrypt; then
            log "ERROR" "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å"
            rollback_system
            exit 1
        fi
        
        if ! verify_installation; then
            log "ERROR" "–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–µ —É–¥–∞–ª–∞—Å—å"
            rollback_system
            exit 1
        fi
        
        log "SUCCESS" "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ DNSCrypt —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
        log "INFO" "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å 3x-ui"
        exit 0
    else
        echo
        echo "DNSCrypt —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
        echo "1) –ò–∑–º–µ–Ω–∏—Ç—å DNS —Å–µ—Ä–≤–µ—Ä"
        echo "2) –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å 3x-ui"
        echo "3) –ó–∞–ø—É—Å—Ç–∏—Ç—å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É DNSCrypt"
        echo "4) –í—ã—Ö–æ–¥"
        echo
        read -p "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-4): " option
        echo
        
        case $option in
            1)
                change_dns_server
                ;;
            2)
                if ! check_3xui_installed; then
                    log "ERROR" "3x-ui –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ 3x-ui –∫–æ–º–∞–Ω–¥–æ–π:"
                    log "INFO" "bash <(curl -Ls https://raw.githubusercontent.com/mhsanaei/3x-ui/master/install.sh)"
                    exit 1
                fi
                
                echo "–ù–∞—Å—Ç—Ä–æ–∏—Ç—å 3x-ui –¥–ª—è —Ä–∞–±–æ—Ç—ã —á–µ—Ä–µ–∑ DNSCrypt?"
                echo "–ë—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–æ:"
                echo "1. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ DNS –≤ 3x-ui –Ω–∞ localhost (127.0.0.1)"
                echo "2. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–ª—É–∂–±—ã 3x-ui"
                echo "3. –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫"
                echo
                read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (–¥/–Ω): " -n 1 -r
                echo
                
                if [[ $REPLY =~ ^[–î–¥Yy]$ ]]; then
                    if configure_3xui_dns; then
                        log "SUCCESS" "3x-ui —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
                        log "INFO" "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
                    else
                        log "ERROR" "–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ DNS –¥–ª—è 3x-ui"
                        exit 1
                    fi
                else
                    log "INFO" "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
                    exit 0
                fi
                ;;
            3)
                diagnose_dnscrypt
                ;;
            4)
                log "INFO" "–í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã..."
                exit 0
                ;;
            *)
                log "ERROR" "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
                exit 1
                ;;
        esac
    fi
}

# –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏
cleanup() {
    local exit_code=$?
    log "INFO" "–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å–∫—Ä–∏–ø—Ç–∞ —Å –∫–æ–¥–æ–º: $exit_code"
    if [ $exit_code -ne 0 ]; then
        log "ERROR" "–°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π $exit_code"
        rollback_system
    fi
    exit $exit_code
}

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º trap –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
trap cleanup EXIT

# –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
main