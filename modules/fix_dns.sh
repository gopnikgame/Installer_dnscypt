#!/bin/bash
# modules/fix_dns.sh - Модуль исправления DNS резолвинга
# Создано: 2025-06-24
# Автор: gopnikgame

# Подключение общей библиотеки
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
source "$SCRIPT_DIR/lib/common.sh"

# Подключение библиотеки диагностики
source "$SCRIPT_DIR/lib/diagnostic.sh" 2>/dev/null || {
    log "ERROR" "Не удалось подключить библиотеку diagnostic.sh"
    echo -e "${RED}Для полной функциональности требуется библиотека diagnostic.sh${NC}"
    echo -e "${YELLOW}Продолжение работы с ограниченной функциональностью...${NC}"
}

# Функция для исправления проблем с DNS
fix_dns_issues() {
    print_header "ИСПРАВЛЕНИЕ DNS-ПРОБЛЕМ"
    log "INFO" "Исправление проблем с DNS..."
    
    # Создание резервной копии перед исправлением
    if [ -f "$DNSCRYPT_CONFIG" ]; then
        backup_config "$DNSCRYPT_CONFIG" "dnscrypt-config"
    fi
    
    # Проверка наличия DNSCrypt
    if ! check_dnscrypt_installed; then
        echo -e "${YELLOW}Сначала нужно установить DNSCrypt-proxy.${NC}"
        echo -e "Используйте пункт меню 'Установить DNSCrypt'"
        return 1
    fi
    
    # Проверка порта DNS (53)
    echo -e "\n${BLUE}Проверка занятости порта DNS (53):${NC}"
    if ! check_port_usage 53; then
        echo -e "${YELLOW}Порт 53 занят другим процессом. Попытка решения проблемы...${NC}"
        
        # Проверка systemd-resolved
        if systemctl is-active --quiet systemd-resolved; then
            echo -e "${YELLOW}Служба systemd-resolved активна и может блокировать порт 53.${NC}"
            echo "Варианты решения:"
            echo "1) Отключить systemd-resolved и перенастроить resolv.conf"
            echo "2) Изменить порт прослушивания DNSCrypt-proxy (не 53)"
            echo "0) Отмена"
            
            read -p "Выберите опцию (0-2): " resolve_choice
            
            case $resolve_choice in
                1)
                    # Отключение systemd-resolved
                    log "INFO" "Отключение systemd-resolved..."
                    systemctl stop systemd-resolved
                    systemctl disable systemd-resolved
                    
                    # Настройка resolv.conf
                    chattr -i "$RESOLV_CONF" 2>/dev/null
                    echo -e "nameserver 127.0.0.1\n" > "$RESOLV_CONF"
                    chattr +i "$RESOLV_CONF" 2>/dev/null
                    
                    log "SUCCESS" "systemd-resolved отключен"
                    ;;
                2)
                    # Изменение порта DNSCrypt
                    log "INFO" "Настройка DNSCrypt на использование альтернативного порта..."
                    
                    # Используем add_config_option из common.sh
                    add_config_option "$DNSCRYPT_CONFIG" "" "listen_addresses" "['127.0.0.1:5353']"
                    
                    echo -e "${YELLOW}DNSCrypt настроен на порт 5353. Необходимо обновить resolv.conf${NC}"
                    
                    # Настройка resolver-а для работы с нестандартным портом
                    chattr -i "$RESOLV_CONF" 2>/dev/null
                    cat > "$RESOLV_CONF" << EOF
# Generated by DNSCrypt Manager
nameserver 127.0.0.1
options edns0 ndots:1
EOF
                    chattr +i "$RESOLV_CONF" 2>/dev/null
                    
                    log "SUCCESS" "DNSCrypt настроен на альтернативный порт"
                    ;;
                0)
                    log "INFO" "Операция отменена"
                    return 0
                    ;;
                *)
                    log "ERROR" "Неверный выбор"
                    return 1
                    ;;
            esac
        else
            # Другой процесс занимает порт 53
            echo -e "${YELLOW}Другой процесс занимает порт 53. Определение...${NC}"
            lsof -i :53
            
            echo -e "\nВарианты решения:"
            echo "1) Остановить другой процесс (может повлиять на работу системы)"
            echo "2) Изменить порт прослушивания DNSCrypt-proxy (не 53)"
            echo "0) Отмена"
            
            read -p "Выберите опцию (0-2): " process_choice
            
            case $process_choice in
                1)
                    # Попытка остановить процесс
                    log "WARN" "Внимание! Остановка процессов может повлиять на работу системы!"
                    echo -e "${RED}Эта операция может быть опасной. Вы уверены?${NC}"
                    read -p "Продолжить? (y/n): " confirm
                    
                    if [[ "${confirm,,}" == "y" ]]; then
                        local process_id=$(lsof -i :53 -t)
                        if [ -n "$process_id" ]; then
                            kill -15 $process_id
                            log "SUCCESS" "Процесс остановлен"
                        else
                            log "ERROR" "Не удалось определить PID процесса"
                        fi
                    else
                        log "INFO" "Операция отменена"
                    fi
                    ;;
                2)
                    # Изменение порта DNSCrypt
                    log "INFO" "Настройка DNSCrypt на использование альтернативного порта..."
                    
                    # Используем add_config_option из common.sh
                    add_config_option "$DNSCRYPT_CONFIG" "" "listen_addresses" "['127.0.0.1:5353']"
                    
                    # Обновление resolv.conf для использования порта 5353
                    echo -e "${YELLOW}DNSCrypt настроен на порт 5353. Обновление настроек системы...${NC}"
                    
                    # Настройка resolver-а
                    chattr -i "$RESOLV_CONF" 2>/dev/null
                    cat > "$RESOLV_CONF" << EOF
# Generated by DNSCrypt Manager
nameserver 127.0.0.1
options ndots:1 timeout:2 attempts:3
EOF
                    chattr +i "$RESOLV_CONF" 2>/dev/null
                    
                    log "SUCCESS" "DNSCrypt настроен на альтернативный порт"
                    ;;
                0)
                    log "INFO" "Операция отменена"
                    return 0
                    ;;
                *)
                    log "ERROR" "Неверный выбор"
                    return 1
                    ;;
            esac
        fi
    fi
    
    # Проверка и перезапуск службы DNSCrypt
    echo -e "\n${BLUE}Проверка и перезапуск службы DNSCrypt-proxy:${NC}"
    systemctl is-active --quiet "$DNSCRYPT_SERVICE" || systemctl start "$DNSCRYPT_SERVICE"
    restart_service "$DNSCRYPT_SERVICE"
    
    # Проверка системного резолвера
    check_system_resolver
    
    echo -e "\n${BLUE}Проверка настроек после исправления:${NC}"
    if verify_settings ""; then
        log "SUCCESS" "DNS-резолвинг работает корректно после исправления"
        return 0
    else
        log "ERROR" "Проблемы с DNS-резолвингом сохраняются"
        
        # Предлагаем дополнительную диагностику
        echo -e "\n${YELLOW}Хотите выполнить дополнительную диагностику?${NC}"
        read -p "Выполнить расширенную диагностику? (y/n): " more_diag
        if [[ "${more_diag,,}" == "y" ]]; then
            extended_verify_config
        fi
        
        return 1
    fi
}

# Функция для проверки и настройки анонимного DNS
check_and_configure_anonymized_dns() {
    print_header "АНОНИМНЫЙ DNS"
    log "INFO" "Проверка и настройка анонимного DNS..."
    
    # Используем функцию из библиотеки common.sh
    check_anonymized_dns
    
    echo -e "\n${BLUE}Управление анонимным DNS:${NC}"
    echo "1) Запустить модуль управления анонимным DNS"
    echo "0) Назад"
    
    read -p "Выберите опцию (0-1): " anon_choice
    
    case $anon_choice in
        1)
            # Проверка наличия модуля
            if [ -f "$SCRIPT_DIR/modules/manage_anonymized_dns.sh" ]; then
                # Запуск модуля управления анонимным DNS
                bash "$SCRIPT_DIR/modules/manage_anonymized_dns.sh"
            else
                log "ERROR" "Модуль manage_anonymized_dns.sh не найден."
                echo -e "${YELLOW}Проверьте наличие модуля и повторите попытку.${NC}"
                return 1
            fi
            ;;
        0)
            return 0
            ;;
        *)
            log "ERROR" "Неверный выбор"
            return 1
            ;;
    esac
    
    return 0
}

# Функция для отображения информации о системе
show_system_info() {
    # Используем функцию из библиотеки diagnostic.sh
    if type get_system_info &>/dev/null; then
        get_system_info
    else
        print_header "ИНФОРМАЦИЯ О СИСТЕМЕ"
        
        echo -e "${BLUE}Операционная система:${NC}"
        cat /etc/os-release | grep "PRETTY_NAME" | cut -d= -f2 | tr -d '"'
        
        echo -e "\n${BLUE}DNS настройки:${NC}"
        echo "Сервер в resolv.conf: $(grep "nameserver" /etc/resolv.conf | head -1 | awk '{print $2}')"
        
        echo -e "\n${BLUE}Сетевые порты:${NC}"
        ss -tuln | grep -E ":53 |:443 |:853 |:8053 "
    fi
    
    return 0
}

# Основное меню модуля
main_menu() {
    while true; do
        print_header "ИСПРАВЛЕНИЕ DNS"
        echo "1) Диагностировать проблемы с DNS"
        echo "2) Исправить проблемы с DNS"
        echo "3) Настройка анонимного DNS"
        echo "4) Очистить DNS-кэш"
        echo "5) Показать информацию о системе"
        echo "0) Выход"
        
        read -p "Выберите опцию (0-5): " option
        
        case $option in
            1)
                # Используем функцию из библиотеки diagnostic.sh
                diagnose_dns_issues
                ;;
            2)
                fix_dns_issues
                ;;
            3)
                check_and_configure_anonymized_dns
                ;;
            4)
                # Используем функцию из библиотеки common.sh
                clear_dns_cache
                ;;
            5)
                show_system_info
                ;;
            0)
                log "INFO" "Выход из модуля исправления DNS"
                exit 0
                ;;
            *)
                log "ERROR" "Неверный выбор"
                ;;
        esac
        
        echo
        read -p "Нажмите Enter для продолжения..."
    done
}

# Проверка root-прав
check_root

# Проверка зависимостей
check_dependencies "dig" "lsof" "systemctl" "grep" "sed"

# Запуск основного меню
log "INFO" "Запуск модуля исправления DNS..."
main_menu